name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Java JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      # Step 4: Build the application
      - name: Build with Maven
        run: ./mvnw package

      # Step 5: Upload build artifacts
      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            target/*.jar
            Dockerfile

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          IMAGE_URI=014498631401.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic
          docker build -t $IMAGE_URI:${{ github.sha }} -t $IMAGE_URI:latest .
          docker push $IMAGE_URI:${{ github.sha }}
          docker push $IMAGE_URI:latest

      - name: Confirm EC2_IP
        run: |
          echo "Deploying to EC2 instance at: ${{ secrets.EC2_IP }}"

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to EC2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no "ubuntu@${{ env.EC2_IP }}" << 'EOF'
            set -e
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 014498631401.dkr.ecr.us-east-1.amazonaws.com
            docker pull 014498631401.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic:latest
            docker stop spring-petclinic || true
            docker rm spring-petclinic || true
            docker run -d --name spring-petclinic -p 8080:8080 014498631401.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic:latest
          EOF

