
name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Build with Maven
        run: ./mvnw package

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/*.jar
            Dockerfile

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          IMAGE_URI=014498631401.dkr.ecr.us-east-1.amazonaws.com/local:latest
          docker build -t $IMAGE_URI:${{ github.sha }} -t $IMAGE_URI:latest .
          docker push $IMAGE_URI:${{ github.sha }}
          docker push $IMAGE_URI:latest

      - name: Update ECS Task Definition
        run: |
          aws ecs describe-task-definition --task-definition spring-petclinic > task-def.json
          cat task-def.json | jq --arg IMAGE_URI "$IMAGE_URI:latest" '.taskDefinition.containerDefinitions[0].image = $IMAGE_URI' > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster spring-petclinic-cluster --service spring-petclinic-service --task-definition spring-petclinic
